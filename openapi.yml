openapi: 3.0.0
info:
  description: API描述信息
  version: 2.3.0
  title: 通知中心接口定义
  contact:
    name: 联系开发人员
    email: openapi@supos.com
tags:
  - name: V1
    description: V1版本
  - name: V2
    description: V2版本
security:
  - Sign: []
paths:
  /api/openapi/notification/v1/message:
    post:
      tags:
        - V1
      summary: 消息发送V1接口
      operationId: sendMessageV1
      description: >-
          调用该接口发送消息时,可以指定发送某一类(type)消息，也可以同时指定多种消息(multipleType)同时发送。当指定type进行发送时，content生效且内容必填。如发送邮件时(type=email),content={title='',text=''}，此时取email作为发送类型，content.title、content.text作为发送内容；发送站内信时(type=stationLetter),content={text=''}，此时取stationLetter作为发送类型，content.text作为发送内容。当指定multipleType进行发送时，text、title生效且内容必填。如multipleType=[['email',''],['stationLetter','']],title='',text=''，此时取email和stationLetter作为发送类型，title、text作为发送内容。当同时指定type和multipleType时，只取type的值。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequestV1'
      responses:
        '200':
          $ref: '#/components/responses/SendSuccess'
        '400':
          description: |
            错误提示
            * 100000001 消息发送者不能为空 {"code":100000001,"message":"消息发送者不能为空"}
            * 100000001 消息来源不能为空 {"code":100000001,"message":"消息来源不能为空"}
            * 100000001 接收人不能为空 {"code":100000001,"message":"接收人不能为空"}
            * 100102002 接收人都不存在 {"code":100102002,"message":"接收人都不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 消息发送者不能为空
                      - 消息来源不能为空
                      - 接收人不能为空
                    description: 错误信息
        '500':
          $ref: '#/components/responses/GeneralError'
  /open-api/p/notification/v2/messages:
    post:
      tags:
        - V2
      summary: 消息发送V2接口
      operationId: sendMessageV2
      description: |
        * 根据指定接收人范围和消息内容列表发送消息。
        * 必填项: 消息发送方业务编号，消息发送方业务名称，消息发送方业务名称，消息发送方业务名称
        * 邮件发送支持附件，fileUrls的参数为网络上可下载的到文件的绝对路径或附件服务器的文件地址。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequestV2'
      responses:
        '200':
          $ref: '#/components/responses/SendSuccess'
        '400':
          description: |
            错误提示
            * 100000001 消息发送方业务编号不能为空 {"code":100000001,"message":"消息发送方业务编号不能为空"}
            * 100000001 消息发送方服务名称不能为空 {"code":100000001,"message":"消息发送方服务名称不能为空"}
            * 100000001 消息接收范围不能为空 {"code":100000001,"message":"消息接收范围不能为空"}
            * 100000001 消息内容列表不能为空 {"code":100000001,"message":"消息内容列表不能为空"}
            * 100102009 消息接受者不存在 {"code":100102009,"message":"消息接受者不存在"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                      - 100102009
                      - 100102012
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 消息发送方业务编码不能为空
                      - 消息发送方服务名称不能为空
                      - 消息接收范围不能为空
                      - 消息内容列表不能为空
                      - 消息接受者不存在
                      - 协议不存在
                    description: 错误信息
        '500':
          description: |
            错误提示
            * 100000001 服务内部异常 {"code":100000001,"message":"服务内部异常"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 服务内部异常
                    description: 错误信息
  /open-api/p/notification/v2/topic/messages:
    post:
      tags:
        - V2
      summary: 根据主题发送消息
      operationId: sendMessageByTopic
      description: 根据主题发送消息。如果入参中指定接收人范围和协议类型，则按照入参来覆盖原有主题的接收人范围和协议类型。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageByTopicRequest'
      responses:
        '200':
          $ref: '#/components/responses/SendSuccess'
        '400':
          description: |
            错误提示
            * 100000001 消息发送方业务编码不能为空 {"code":100000001,"message":"消息发送方业务编码不能为空"}
            * 100000001 消息发送方服务名称不能为空 {"code":100000001,"message":"消息发送方服务名称不能为空"}
            * 100000001 主题编号不能为空 {"code":100000001,"message":"主题编号不能为空"}
            * 100102007 主题不存在 {"code":100102007,"message":"主题不存在"}
            * 100102008 主题没有关联模板 {"code":100102008,"message":"主题没有关联模板"}
            * 100102009 消息接受者不存在 {"code":100102009,"message":"消息接受者不存在"}
            * 100102011 主题不包含该协议 {"code":100102011,"message":"主题不包含该协议"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                      - 100102007
                      - 100102008
                      - 100102009
                      - 100102011
                      - 100102012
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 消息发送方业务编码不能为空
                      - 消息发送方服务名称不能为空
                      - 主题编号不能为空
                      - 主题不存在
                      - 主题没有关联模板
                      - 消息接受者不存在
                      - 主题不包含该协议
                      - 协议不存在
                    description: 错误信息
        '500':
          description: |
            错误提示
            * 100000001 服务内部异常 {"code":100000001,"message":"服务内部异常"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 服务内部异常
                    description: 错误信息
  /open-api/p/notification/v2alpha1/users/{username}/messages:
    get:
      tags:
        - V2
      summary: 查询用户接收的消息
      deprecated: false
      description: |
        * 查询用户某一个时间段范围内收到的消息，消息通知方式为邮件、站内信等。
        * 本接口为试用接口，今后不一定会兼容
      operationId: queryUserMessages
      parameters:
        - name: username
          in: path
          required: true
          description: 用户名
          schema:
            type: string
        - name: startTime
          in: query
          required: true
          description: 查询某一时间范围的起始时间(时间格式必须要带时区), 格式为:"yyyy-MM-dd'T'HH:mm:ss.SSZ,例如：零时区时间："2021-01-26T16:02:15.666+0000"；东八区时间："2021-01-26T16:02:15.666+0800"。
          schema:
            type: string
          example: "2021-01-26T16:02:15.666+0800"
        - name: endTime
          in: query
          required: true
          description: 查询某一时间范围的结束时间(时间格式必须要带时区), 格式为:"yyyy-MM-dd'T'HH:mm:ss.SSZ,例如：零时区时间："2021-01-26T16:02:15.666+0000"；东八区时间："2021-01-26T16:02:15.666+0800"。。
          schema:
            type: string
          example: "2021-07-01T16:02:15.666+0800"
        - name: noticeProtocol
          in: query
          required: true
          description: 消息通知方式，如：邮件：email，站内信:stationLetter；具体通知方式可进入系统进行查看
          schema:
            type: string
          example: "stationLetter"
        - name: current
          in: query
          required: false
          description: 分页查询的当前页码，默认是1(第一页)，页码必须大于等于1。
          schema:
            type: integer
            default: 1
          example: 1
        - name: pageSize
          in: query
          required: false
          description: 分页查询的每页条数，默认是20条，每页条数范围是1~500。
          schema:
            type: integer
            default: 20
          example: 20
      responses:
        '200':
          description: 用户接收到的消息的响应结果
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/noticeMessageResponse'
              example:
                pagination: {
                  current: 1,
                  pageSize: 20,
                  total: 3
                }
                list: [
                   {
                     sender: "work_flow",
                     topic: "待办消息",
                     param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                     staffCode: "zhangsan",
                     staffName: "张三",
                     sendStatus: 1,
                     readStatus: 1,
                     noticeProtocol: "stationLetter",
                     errorResult:
                   },
                   {
                     sender: "work_flow",
                     topic: "待办消息",
                     param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                     staffCode: "zhangsan",
                     staffName: "张三",
                     sendStatus: 1,
                     readStatus: 0,
                     noticeProtocol: "stationLetter",
                     errorResult:
                   },
                   {
                     sender: "work_flow",
                     topic: "待办消息",
                     param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                     staffCode: "zhangsan",
                     staffName: "张三",
                     sendStatus: 0,
                     readStatus: 0,
                     noticeProtocol: "stationLetter",
                     errorResult: "no channel"
                   }
                ]
        '400':
          description: |
            错误提示
            * 100000001 起始时间不能为空 {"code":100000001,"message":"起始时间不能为空"}
            * 100000001 结束时间不能为空 {"code":100000001,"message":"结束时间不能为空"}
            * 100102022 用户不存在 {"code":100102022,"message":"用户不存在"}
            * 100102023 起始时间格式不正确 {"code":100102023,"message":"起始时间格式不正确"}
            * 100102024 结束时间格式不正确 {"code":100102024,"message":"结束时间格式不正确"}
            * 100102025 页码必须大于等于1 {"code":100102025,"message":"页码必须大于等于1"}
            * 100102026 页长必须大于等于1，且小于等于500 {"code":100102025,"message":"页长必须大于等于1，且小于等于500"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 错误编码
                    example: 100000001
                  message:
                    type: string
                    description: 错误信息
                    example: 起始时间不能为空
        '500':
          $ref: '#/components/responses/GeneralError'
  /open-api/p/notification/v2/messages/standard:
    post:
      tags:
        - V2
      summary: 消息发送V2接口
      operationId: sendMessageV2ByStandard
      description: 根据指定接收人范围和消息内容列表发送消息。消息发送成功则返回本次发送任务编码
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequestV2ByStandard'
      responses:
        '200':
          $ref: '#/components/responses/SendSuccess'
        '400':
          description: |
            错误提示
            * 100000001 消息发送方业务编码不能为空 {"code":100000001,"message":"消息发送方业务编码不能为空"}
            * 100000001 消息发送方服务名称不能为空 {"code":100000001,"message":"消息发送方服务名称不能为空"}
            * 100000001 消息接收范围不能为空 {"code":100000001,"message":"消息接收范围不能为空"}
            * 100000001 消息内容列表不能为空 {"code":100000001,"message":"消息内容列表不能为空"}
            * 100102009 消息接受者不存在 {"code":100102009,"message":"消息接受者不存在"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                      - 100102009
                      - 100102012
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 消息发送方业务编码不能为空
                      - 消息发送方服务名称不能为空
                      - 消息接收范围不能为空
                      - 消息内容列表不能为空
                      - 消息接受者不存在
                      - 协议不存在
                      - 主题不存在
                    description: 错误信息
        '500':
          description: |
            错误提示
            * 100000001 服务内部异常 {"code":100000001,"message":"服务内部异常"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 服务内部异常
                    description: 错误信息
  /open-api/p/notification/v2/topic/messages/standard:
    post:
      tags:
        - V2
      summary: 根据主题发送消息
      operationId: sendMessageByTopicByStandard
      description: 根据主题发送消息。如果入参中指定接收人范围和协议类型，则按照入参来覆盖原有主题的接收人范围和协议类型。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageByTopicRequestByStandard'
      responses:
        '200':
          $ref: '#/components/responses/SendSuccess'
        '400':
          description: |
            错误提示
            * 100000001 消息发送方业务编码不能为空 {"code":100000001,"message":"消息发送方业务编码不能为空"}
            * 100000001 消息发送方服务名称不能为空 {"code":100000001,"message":"消息发送方服务名称不能为空"}
            * 100000001 主题编号不能为空 {"code":100000001,"message":"主题编号不能为空"}
            * 100102007 主题不存在 {"code":100102007,"message":"主题不存在"}
            * 100102008 主题没有关联模板 {"code":100102008,"message":"主题没有关联模板"}
            * 100102009 消息接受者不存在 {"code":100102009,"message":"消息接受者不存在"}
            * 100102011 主题不包含该协议 {"code":100102011,"message":"主题不包含该协议"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
            * 100102015 协议不支持 {"code":100102015,"message":"协议不支持"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                      - 100102007
                      - 100102008
                      - 100102009
                      - 100102011
                      - 100102012
                      - 100102015
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 消息发送方业务编码不能为空
                      - 消息发送方服务名称不能为空
                      - 主题编号不能为空
                      - 主题不存在
                      - 主题没有关联模板
                      - 消息接受者不存在
                      - 主题不包含该协议
                      - 协议不存在
                      - 协议不支持
                    description: 错误信息
        '500':
          description: |
            错误提示
            * 100000001 服务内部异常 {"code":100000001,"message":"服务内部异常"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    enum:
                      - 100000001
                    description: 错误编码
                  message:
                    type: string
                    enum:
                      - 服务内部异常
                    description: 错误信息
  /open-api/p/notification/v2alpha1/users/{username}/messages/standard:
    get:
      tags:
        - V2
      summary: 查询用户接收的消息
      deprecated: false
      description: |
        * 查询用户某一个时间段范围内收到的消息
      operationId: queryUserMessagesByStandard
      parameters:
        - name: username
          in: path
          required: true
          description: 用户名
          schema:
            type: string
        - name: startTime
          in: query
          required: true
          description: 查询某一时间范围的起始时间(时间格式必须要带时区), 格式为:"yyyy-MM-dd'T'HH:mm:ss.SSZ,例如：零时区时间："2021-01-26T16:02:15.666+0000"；东八区时间："2021-01-26T16:02:15.666+0800"。
          schema:
            type: string
          example: "2021-01-26T16:02:15.666+0800"
        - name: endTime
          in: query
          required: true
          description: 查询某一时间范围的结束时间(时间格式必须要带时区), 格式为:"yyyy-MM-dd'T'HH:mm:ss.SSZ,例如：零时区时间："2021-01-26T16:02:15.666+0000"；东八区时间："2021-01-26T16:02:15.666+0800"。。
          schema:
            type: string
          example: "2021-07-01T16:02:15.666+0800"
        - name: noticeProtocol
          in: query
          required: true
          description: 消息通知方式，站内信:stationLetter；
          schema:
            type: string
          example: "stationLetter"
        - name: current
          in: query
          required: false
          description: 分页查询的当前页码，默认是1(第一页)，页码必须大于等于1。
          schema:
            type: integer
            default: 1
          example: 1
        - name: pageSize
          in: query
          required: false
          description: 分页查询的每页条数，默认是20条，每页条数范围是1~500。
          schema:
            type: integer
            default: 20
          example: 20
      responses:
        '200':
          description: 用户接收到的消息的响应结果
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/noticeMessageResponseByStandard'
              example:
                pagination: {
                  current: 1,
                  pageSize: 20,
                  total: 3
                }
                list: [
                  {
                    sender: "work_flow",
                    topic: "待办消息",
                    param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                    staffCode: "zhangsan",
                    staffName: "张三",
                    sendStatus: 1,
                    readStatus: 1,
                    noticeProtocol: "stationLetter",
                    errorResult:
                  },
                  {
                    sender: "work_flow",
                    topic: "待办消息",
                    param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                    staffCode: "zhangsan",
                    staffName: "张三",
                    sendStatus: 1,
                    readStatus: 0,
                    noticeProtocol: "stationLetter",
                    errorResult:
                  },
                  {
                    sender: "work_flow",
                    topic: "待办消息",
                    param: "{\"creator\":\"张三\",\"creationTime\":\"2021-07-26 09:36:49\",\"extendcontent\":\"\",\"title\":\"回归测试\",\"content\":\"人员-接收通知\",\"url\":\"/project/flow/#/workflowPage?todoId=1531845319510608&processId=1531845294377552&appId=App_93549d29f01ca145d916fd72c1dd6ac6\"}",
                    staffCode: "zhangsan",
                    staffName: "张三",
                    sendStatus: 0,
                    readStatus: 0,
                    noticeProtocol: "stationLetter",
                    errorResult: "no channel"
                  }
                ]
        '400':
          description: |
            错误提示
            * 100000001 起始时间不能为空 {"code":100000001,"message":"起始时间不能为空"}
            * 100000001 结束时间不能为空 {"code":100000001,"message":"结束时间不能为空"}
            * 100102022 用户不存在 {"code":100102022,"message":"用户不存在"}
            * 100102023 起始时间格式不正确 {"code":100102023,"message":"起始时间格式不正确"}
            * 100102024 结束时间格式不正确 {"code":100102024,"message":"结束时间格式不正确"}
            * 100102025 页码必须大于等于1 {"code":100102025,"message":"页码必须大于等于1"}
            * 100102026 页长必须大于等于1，且小于等于500 {"code":100102025,"message":"页长必须大于等于1，且小于等于500"}
            * 100102012 协议不存在 {"code":100102012,"message":"协议不存在"}
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 错误编码
                    example: 100000001
                  message:
                    type: string
                    description: 错误信息
                    example: 起始时间不能为空
        '500':
          $ref: '#/components/responses/GeneralError'

components:
  securitySchemes:
    Sign:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    SendMessageRequestV1:
      type: object
      required:
        - receivers
        - sender
        - source
      properties:
        content:
          type: object
          description: '消息内容, 指定typ时必填'
          properties:
            title:
              type: string
              description: '消息标题,tyep指定email时生效'
              example: title
            text:
              type: string
              description: '消息内容,tyep指定email或者stationLetter时生效'
              example: text
        multipleType:
          type: array
          description: 同时指定多种发送方式
          example:
            - - email
              - ''
            - - stationLetter
              - ''
          items:
            type: array
            items:
              type: string
        receivers:
          type: array
          description: 必填项,消息接收(supOS用户名),admin不能作为消息接收人
          example:
            - userName
          items:
            type: string
        sender:
          type: string
          description: 必填项,消息发送者
          example: sender
        source:
          type: string
          description: 必填项,消息来源
          example: source
        text:
          type: string
          description: 消息内容,同时指定多种发送方式必填
          example: text
        title:
          type: string
          description: 消息标题,同时指定多种发送方式必填
          example: title
        type:
          type: string
          description: 发送方式,可以指定email或者stationLetter
          example: email
    SendMessageRequestV2:
      type: object
      required:
        - businessCode
        - businessName
        - receivers
        - contents
      properties:
        businessCode:
          type: string
          description: 必填项，消息发送方业务编号
          example: businessCode
          maxLength: 200
        businessName:
          type: string
          description: 必填项，消息发送方业务名称
          example: businessName
          maxLength: 200
        receivers:
          type: array
          description: 必填项，接收人范围（可多选）
          items:
            type: object
            properties:
              rangeType:
                type: string
                enum: [STAFF,POSITION,DEPARTMENT,ROLE,EMAIL]
                description: 必填项，接收人范围类型：STAFF=人员、POSITION=岗位、DEPARTMENT=部门、ROLE=角色、EMAIL=邮箱
                example: STAFF
              codes:
                type: array
                items:
                  type: string
                  description: 必填项，当rangeType指定为STAFF、POSITION、DEPARTMENT、ROLE时，为对应的编码。当rangeType指定为EMAIL时，为接收人的邮箱地址
                  example: STAFF_CODE
          example: [{"rangeType":"EMAIL","codes":["admin@supos.com"]},{"rangeType":"STAFF","codes":["zhangsan"]}]
        contents:
          type: array
          description: 必填项，消息内容列表
          example:
            - protocol: email
              content: '{"subject":"标题","text":"正文"}'
              fileUrls: ["http://file-server/a/b.zip"]
            - protocol: stationLetter
              content: '{"text":"正文"}'
          items:
            type: object
            properties:
              protocol:
                type: string
                description: 必填项，协议类型
                required: true
              content:
                type: string
                description: 必填项，消息内容
                required: true
              fileUrls:
                type: array
                description: 当protocol为email时，邮箱的附件，可通过网络或附件服务器下载的到的资源文件
                example: ["http://file-server/a/b.zip"]
                required: false
    SendMessageRequestV2ByStandard:
      type: object
      required:
        - businessCode
        - businessName
        - receivers
        - contents
      properties:
        businessCode:
          type: string
          description: 必填项，消息发送方业务编号
          example: businessCode
        businessName:
          type: string
          description: 必填项，消息发送方业务名称
          example: businessName
        receivers:
          type: array
          description: 必填项，接收人范围（可多选）
          items:
            type: object
            properties:
              rangeType:
                type: string
                enum: [STAFF,ROLE]
                description: 必填项，接收人范围类型：STAFF=用户、ROLE=角色
                example: STAFF
              codes:
                type: array
                items:
                  type: string
                  description: 必填项，当指定为STAFF、ROLE对应的编码
                  example: STAFF_CODE
        contents:
          type: array
          description: 必填项，消息内容列表
          example:
            - protocol: stationLetter
              content: '{"text":"正文"}'
          items:
            type: object
            properties:
              protocol:
                type: string
                description: 必填项，消息通知方式(站内信：stationLetter)
              content:
                type: string
                description: 必填项，消息内容
    SendMessageByTopicRequestByStandard:
      type: object
      required:
        - businessCode
        - businessName
        - topicCode
      properties:
        businessCode:
          type: string
          description: 必填项，消息发送方业务编号
          example: businessCode
        businessName:
          type: string
          description: 必填项，消息发送方业务名称
          example: businessName
        topicCode:
          type: string
          description: 填项，主题编号
          example: topicCode
        protocols:
          type: array
          items:
            type: string
            enum:
              - stationLetter
            description: 非必填项，使用当前传入协议类型来发送消息议(只能选择当前主题所拥有的协议，超出范围报错)
        receivers:
          type: array
          description: 非必填项，使用当前传入接收范围来发送消息（可多选）
          items:
            type: object
            properties:
              rangeType:
                type: string
                enum: [STAFF,ROLE]
                description: 必填项，接收人范围类型：STAFF=用户、ROLE=角色
                example: STAFF
              codes:
                type: string
                description: 必填项，当指定为STAFF、ROLE对应的编码
                example: STAFF_CODE
        param:
          type: object
          description: 非必填项，主题关键字(模板变量)
    SendMessageByTopicRequest:
      type: object
      required:
        - businessCode
        - businessName
        - topicCode
      properties:
        businessCode:
          type: string
          description: 必填项，消息发送方业务编号
          example: businessCode
        businessName:
          type: string
          description: 必填项，消息发送方业务名称
          example: businessName
        topicCode:
          type: string
          description: 填项，主题编号
          example: topicCode
        protocols:
          type: array
          items:
            type: string
            enum:
              - stationLetter
              - email
            description: 非必填项，使用当前传入协议类型来发送消息议(只能选择当前主题所拥有的协议，超出范围报错)
        receivers:
          type: array
          description: 非必填项，使用当前传入接收范围来发送消息（可多选）
          items:
            type: object
            properties:
              rangeType:
                type: string
                enum: [STAFF,POSITION,DEPARTMENT,ROLE]
                description: 必填项，接收人范围类型：STAFF=人员、POSITION=岗位、DEPARTMENT=部门、ROLE=角色
                example: STAFF
              codes:
                type: string
                description: 必填项，当指定为STAFF、POSITION、DEPARTMENT、ROLE对应的编码
                example: STAFF_CODE
        param:
          type: object
          description: 非必填项，主题关键字(模板变量)
    noticeMessageResponse:
      type: object
      properties:
        sender:
          type: string
          description: 消息发送方
        topic:
          type: string
          description: 主题名称
        noticeProtocol:
          type: string
          description: 消息通知方式(邮件：email、站内信：stationLetter)
        param:
          type: string
          description: 业务端原始json参数
        staffCode:
          type: string
          description: 当前接收消息用户的人员编号
        staffName:
          type: string
          description: 当前接收消息用户的人员名称
        sendStatus:
          type: integer
          description: 消息发送状态(0:失败、1:成功、2:未知)
        readStatus:
          type: integer
          description: 消息阅读状态(0:未读、1:已读、2:未知)
        errorResult:
          type: string
          description: "发送失败返回结果"
    noticeMessageResponseByStandard:
      type: object
      properties:
        sender:
          type: string
          description: 消息发送方
        topic:
          type: string
          description: 主题名称
        noticeProtocol:
          type: string
          description: 消息通知方式(站内信：stationLetter)
        param:
          type: string
          description: 业务端原始json参数
        staffCode:
          type: string
          description: 当前接收消息的用户名称
        staffName:
          type: string
          description: 当前接收消息的用户姓名
        sendStatus:
          type: integer
          description: 消息发送状态(0:失败、1:成功、2:未知)
        readStatus:
          type: integer
          description: 消息阅读状态(0:未读、1:已读、2:未知)
        errorResult:
          type: string
          description: "发送失败返回结果"
  responses:
    GeneralError:
      description: 常规的错误 100000001 服务内部异常
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                description: '错误编码,例:100000001'
                example: 100000001
              message:
                type: string
                description: 错误信息
                example: 服务内部异常
    SendSuccess:
      description: 消息发送成功返回任务编码
      content:
        application/json:
          schema:
            type: object
            properties:
              taskCode:
                type: string
                description: 任务编码
                example: taskCode